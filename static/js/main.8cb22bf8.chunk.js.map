{"version":3,"sources":["Converter.js","App.js","logo.svg","serviceWorker.js","index.js"],"names":["Convert","id","SVG","props","width","height","stroke","fill","viewBox","xmlns","d","Numbers","className","Converter","onClick","numbers","Special","skills","MathButton","function","App","useState","currentDisplay","setCurrentDisplay","String","fromCharCode","formula","setFormula","resetAll","e","displayScreen","formulaDisplay","preventDefault","handleNumbers","needReset","substr","length","value","target","innerText","maxLimitError","mathematicsOperations","isNegative","err","test","inputDot","evaluate","console","log","eval","equation","answer","module","exports","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8cb22bf8.chunk.js","sourcesContent":["function Convert(id) {\r\n  switch (id) {\r\n    case \"0\":\r\n      return \"zero\";\r\n    case \"1\":\r\n      return \"one\";\r\n    case \"2\":\r\n      return \"two\";\r\n    case \"3\":\r\n      return \"three\";\r\n    case \"4\":\r\n      return \"four\";\r\n    case \"5\":\r\n      return \"five\";\r\n    case \"6\":\r\n      return \"six\";\r\n    case \"7\":\r\n      return \"seven\";\r\n    case \"8\":\r\n      return \"eight\";\r\n    case \"9\":\r\n      return \"nine\";\r\n    case \"÷\":\r\n      return \"divide\";\r\n    case \"×\":\r\n      return \"multiply\";\r\n    case \"—\":\r\n      return \"subtract\";\r\n    case \"+\":\r\n      return \"add\";\r\n    case \"=\":\r\n      return \"equals\";\r\n    case \".\":\r\n      return \"decimal\";\r\n    case \"AC\":\r\n      return \"clear\";\r\n    default:\r\n      return \"Nan\";\r\n  }\r\n}\r\nexport default Convert;\r\n","/* eslint-disable no-eval */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Converter from \"./Converter\";\n\n\nconst SVG = (props) => (\n  // Thank you, https://squircley.app !!!\n  <svg\n    width=\"50px\"\n    height=\"50px\"\n    id={props.id}\n    stroke={props.stroke}\n    fill={props.fill}\n    viewBox=\"0 0 150 150\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      id={props.id}\n      d=\"M 0, 75\n      C 0, 18.75 18.75, 0 75, 0\n      S 150, 18.75 150, 75\n      131.25, 150 75, 150\n      0, 131.25 0, 75\"\n    ></path>\n  </svg>\n);\n\nfunction Numbers(props) {\n  return (\n    <div\n      className=\"button-center\"\n      id={Converter(props.id)}\n      onClick={props.numbers}\n    >\n      <SVG stroke=\"#b2bec3\" fill=\"#FAFAFA\" id={props.id} />\n      <a>{props.id}</a>\n    </div>\n  );\n}\n\nfunction Special(props) {\n  return (\n    <div\n      className={`button-special ${props.id === \"Nan\" && \"nan\"}`}\n      id={Converter(props.id)}\n      onClick={props.skills}\n    >\n      <SVG stroke=\"#fab1a0\" fill=\"#d63031\" />\n      <a>{props.id}</a>\n    </div>\n  );\n}\n\nfunction MathButton(props) {\n  return (\n    <div\n      className={props.id === \"=\" ? \"button-math-equals\" : \"button-math\"}\n      id={Converter(props.id)}\n      onClick={props.function}\n    >\n      <SVG\n        stroke={props.id === \"=\" ? \"#c8d6e5\" : \"#74b9ff\"}\n        fill={props.id === \"=\" ? \"#4185f4\" : \"#FAFAFA\"}\n        id={props.id}\n      />\n      <a>{props.id}</a>\n    </div>\n  );\n}\n\nfunction App() {\n  const [currentDisplay, setCurrentDisplay] = useState(\"0\");\n  const [formula, setFormula] = useState(String.fromCharCode(160));\n\n  function resetAll(e, displayScreen=\"0\", formulaDisplay=String.fromCharCode(160)) {\n    e.preventDefault();\n    setCurrentDisplay(displayScreen);\n    setFormula(formulaDisplay);\n  }\n\n  function handleNumbers(e) {\n    e.preventDefault();\n    let needReset = false;\n    if (formula.substr(formula.length - 1) === \"=\") {\n      needReset = true;\n      resetAll(e);\n    }\n    const value = e.target.innerText || e.target.id;\n    switch (currentDisplay) {\n      case \"0\":\n        setCurrentDisplay(value);\n        break;\n      case \"/\":\n        setFormula(formula + currentDisplay);\n        setCurrentDisplay(value);\n        break;\n      case \"x\":\n        setFormula(formula + \"*\");\n        setCurrentDisplay(value);\n        break;\n      case \"—\":\n        setFormula(formula + \"-\");\n        setCurrentDisplay(value);\n        break;\n      case \"+\":\n        setFormula(formula + currentDisplay);\n        setCurrentDisplay(value);\n        break;\n      default:\n        setCurrentDisplay(needReset ? value : currentDisplay + value);\n    }\n    if (currentDisplay.length > 9) {\n      maxLimitError();\n    }\n  }\n\n  function mathematicsOperations(e) {\n    e.preventDefault();\n    let needReset = (formula.substr(formula.length-1)==='=') && true\n    let putZero = currentDisplay==='-' && true;\n    let isNegative;\n    try {\n      isNegative = (currentDisplay.substr(0, 1) === \"-\") && true;\n    }\n    catch(err) {\n      isNegative = false;\n    }\n    if (!/LIMIT ERROR/.test(currentDisplay)) {\n      formula === String.fromCharCode(160) && setFormula(\"\"); // remove the empty char.\n      const value = e.target.innerText ? e.target.innerText : e.target.id;\n      switch (value) {\n        case \"÷\":\n          if (needReset) {\n            resetAll(e,'/',currentDisplay);\n            return;\n          };\n          !/\\+|x|\\/|—/.test(currentDisplay) &&\n          setFormula(((isNegative) && (currentDisplay.length===1)) ? formula+'0' : \n          `${formula}${isNegative ? \"(\" : \"\"}${currentDisplay}${\n            isNegative ? \")\" : \"\"\n          }`\n          );\n          setCurrentDisplay(\"/\");\n          break;\n        case \"×\":\n          if (needReset) {\n            resetAll(e,'x',currentDisplay);\n            return;\n          };\n          !/\\+|x|\\/|—/.test(currentDisplay) &&\n          setFormula(((isNegative) && (currentDisplay.length===1)) ? formula+'0' : \n          `${formula}${isNegative ? \"(\" : \"\"}${currentDisplay}${\n            isNegative ? \")\" : \"\"\n          }`\n          );\n          setCurrentDisplay(\"x\");\n          break;\n        case \"+\":\n          if (needReset) {\n            resetAll(e,'+',currentDisplay);\n            return;\n          };\n          if (!/\\+|x|\\/|—/.test(currentDisplay)){\n            if ((/\\+|\\*|\\/|-/.test(formula.substr(formula.length-1))) && (/\\+|x|\\/|\\-/.test(currentDisplay))) {\n              setFormula(formula.substr(0,formula.length-1));\n            } else if ((isNegative) && (currentDisplay.length===1)) {\n              if (isNegative) {\n                if (currentDisplay==='-') {\n                  setCurrentDisplay('0');}\n              } // remove negative\n            } else {\n              setFormula(`${formula}${isNegative ? \"(\" : \"\"}${currentDisplay}${\n                isNegative ? \")\" : \"\"\n              }`);\n              \n            }; \n          }\n          setCurrentDisplay(\"+\");\n          break;\n        case \"—\":\n          if (needReset) {\n            resetAll(e,'—',currentDisplay);\n            return;\n          };\n          if (/\\+|x|\\/|—/.test(currentDisplay)) {\n            if (/\\+|\\*|\\/|-/.test(formula.substr(formula.length-1))) {\n              setFormula(formula.substr(0,formula.length-1));\n            } else if (currentDisplay==='x') {\n              setFormula(formula + '*');\n            } else if (currentDisplay==='—') {\n              setFormula(formula + '-');\n            } else {\n              setFormula(formula + currentDisplay);\n              \n            }\n            setCurrentDisplay(\"-\");\n          } else if (isNegative) { // remove negativity\n            if (currentDisplay==='-') {\n              setCurrentDisplay('0');\n            } else {\n              setCurrentDisplay(currentDisplay.substr(1, currentDisplay.length));\n            };\n\n            \n          } else {\n            setFormula(formula + currentDisplay);\n            setCurrentDisplay(\"—\");\n          }\n          break;\n        default:\n      }\n    }\n  }\n\n  function maxLimitError() {\n    setCurrentDisplay(\"LIMIT ERROR\");\n  }\n\n  function inputDot(e) {\n    e.preventDefault();\n    if (formula.substr(formula.length - 1) === \"=\") {\n      resetAll(e);\n    } else if (!/\\.|LIMIT ERROR/.test(currentDisplay)) {\n      setCurrentDisplay(currentDisplay + \".\");\n    }\n  }\n\n  function evaluate(e) {\n    e.preventDefault();\n    \n    if (formula.substr(formula.length - 1) === \"=\") {\n    } else if (!/\\+|x|\\/|—|LIMIT ERROR/.test(currentDisplay)) {\n      let isNegative = currentDisplay.substr(0, 1) === \"-\" && true;\n      let equation = ((isNegative) && (currentDisplay.length===1)) ? formula+'0' : \n      `${formula}${isNegative ? \"(\" : \"\"}${currentDisplay}${\n        isNegative ? \")\" : \"\"\n      }`\n      console.log('equation:', equation);\n      let answer = eval(equation);\n      setCurrentDisplay(''+answer);\n      setFormula(equation + \"=\");\n    } else if (!/LIMIT ERROR/.test(currentDisplay)) {\n      console.log('equation:', formula);\n      setCurrentDisplay(''+eval(formula));\n      setFormula(formula + \"=\");\n    }\n  }\n  return (\n    <div className=\"calculator\">\n      <div id=\"equation\" className=\"equation\">\n        {formula}\n      </div>\n      <div id=\"display\" className=\"display\">\n        {currentDisplay}\n      </div>\n      <div className=\"divider-2\">\n        <span></span>{\" \"}\n      </div>\n      <Special id=\"AC\" skills={resetAll} />\n      <Special id=\"Nan\" />\n      <Special id=\"Nan\" />\n      <MathButton id=\"÷\" function={mathematicsOperations} />\n      <Numbers id=\"7\" numbers={handleNumbers} />\n      <Numbers id=\"8\" numbers={handleNumbers} />\n      <Numbers id=\"9\" numbers={handleNumbers} />\n      <MathButton id=\"×\" function={mathematicsOperations} />\n      <Numbers id=\"4\" numbers={handleNumbers} />\n      <Numbers id=\"5\" numbers={handleNumbers} />\n      <Numbers id=\"6\" numbers={handleNumbers} />\n      <MathButton id=\"—\" function={mathematicsOperations} />\n      <Numbers id=\"1\" numbers={handleNumbers} />\n      <Numbers id=\"2\" numbers={handleNumbers} />\n      <Numbers id=\"3\" numbers={handleNumbers} />\n      <MathButton id=\"+\" function={mathematicsOperations} />\n      <Numbers id=\".\" numbers={inputDot} />\n      <Numbers id=\"0\" numbers={handleNumbers} />\n      <Special id=\"Nan\" />\n      <MathButton id=\"=\" function={evaluate} />\n    </div>\n  );\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}